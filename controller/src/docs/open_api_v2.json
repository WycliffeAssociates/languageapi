{
  "swagger": "2.0",
  "info": {
    "description": "This is the API",
    "title": "My API",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/api/content": {
      "delete": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "namespace"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation message of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Delete one or more content/repo",
        "operationId": "DeleteContent"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All content",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "createdOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "domain": {
                        "enum": [
                          "scripture",
                          "gloss",
                          "parascriptural",
                          "peripheral"
                        ],
                        "type": "string",
                        "x-nullable": true
                      },
                      "id": {
                        "maxLength": 256,
                        "type": "string"
                      },
                      "languageId": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "level": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "modifiedOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "name": {
                        "maxLength": 256,
                        "type": "string"
                      },
                      "namespace": {
                        "maxLength": 256,
                        "type": "string"
                      },
                      "resourceType": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "title": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "type": {
                        "enum": [
                          "text",
                          "audio",
                          "video",
                          "braille"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "languageId",
                      "name",
                      "namespace",
                      "title",
                      "type",
                      "domain",
                      "resourceType",
                      "createdOn",
                      "modifiedOn",
                      "level"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "type": "string"
                },
                "ok": {
                  "type": "boolean"
                }
              },
              "required": [
                "message",
                "ok",
                "data"
              ],
              "type": "object"
            }
          }
        },
        "description": "Get content",
        "operationId": "GetContent"
      },
      "post": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of projects/content",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/content"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object with inserted content data",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Add one or more repo/content",
        "operationId": "CreateContent"
      }
    },
    "/api/country": {
      "delete": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "alpha2Codes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "alpha2Codes"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation message of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Delete one or more countries",
        "operationId": "DeleteCountry"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All countries",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "alpha2": {
                        "type": "string"
                      },
                      "alpha3": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "createdOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "id": {
                        "type": "number"
                      },
                      "modifiedOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "name": {
                        "type": "string"
                      },
                      "population": {
                        "type": "number",
                        "x-nullable": true
                      },
                      "worldRegionId": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "worldRegionId",
                      "createdOn",
                      "modifiedOn",
                      "alpha2",
                      "alpha3",
                      "population"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message",
                "data"
              ],
              "type": "object"
            }
          }
        },
        "description": "Get country",
        "operationId": "GetCountry"
      },
      "post": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of countries",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/country"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object with inserted country data",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Add one or more country",
        "operationId": "CreateCountry"
      }
    },
    "/api/git": {
      "delete": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of username and repo (composite key) used to delete git repos",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "userRepo": {
                  "items": {
                    "properties": {
                      "repo": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "username",
                      "repo"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "userRepo"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation message of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Delete one or git entries",
        "operationId": "DeleteGit"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All git entries",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "contentId": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "repoName": {
                        "type": "string"
                      },
                      "repoUrl": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "contentId",
                      "username",
                      "repoName",
                      "repoUrl"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "type": "string"
                },
                "ok": {
                  "type": "boolean"
                }
              },
              "required": [
                "message",
                "ok",
                "data"
              ],
              "type": "object"
            }
          }
        },
        "description": "Get git entries",
        "operationId": "GetGit"
      },
      "post": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of git entries to add",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/git"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Add one or more git entries",
        "operationId": "CreateGit"
      }
    },
    "/api/language": {
      "delete": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of ietfCodes corresponding to languages to delete",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "ietfCodes": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "ietfCodes"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation message of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Delete one or more languages",
        "operationId": "DeleteLanguage"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All languages",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "createdOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "direction": {
                        "enum": [
                          "ltr",
                          "rtl"
                        ],
                        "type": "string"
                      },
                      "englishName": {
                        "type": "string"
                      },
                      "homeCountryAlpha2": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "ietfCode": {
                        "type": "string"
                      },
                      "isOralLanguage": {
                        "type": "boolean",
                        "x-nullable": true
                      },
                      "iso6393": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "modifiedOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "nationalName": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "ietfCode",
                      "nationalName",
                      "englishName",
                      "direction",
                      "iso6393",
                      "createdOn",
                      "modifiedOn",
                      "isOralLanguage",
                      "homeCountryAlpha2"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "type": "string"
                },
                "ok": {
                  "type": "boolean"
                }
              },
              "required": [
                "message",
                "ok",
                "data"
              ],
              "type": "object"
            }
          }
        },
        "description": "Get language",
        "operationId": "GetLanguage"
      },
      "post": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of languages",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/language"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object with inserted language data",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Add one or more language",
        "operationId": "CreateLanguage"
      }
    },
    "/api/region": {
      "delete": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of regions by their regionName corresponding to regions to delete",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "regionNames": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "regionNames"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation message of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Delete one or more regions",
        "operationId": "DeleteRegion"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All regions",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "createdOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "id": {
                        "type": "number"
                      },
                      "modifiedOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "createdOn",
                      "modifiedOn"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "type": "string"
                },
                "ok": {
                  "type": "boolean"
                }
              },
              "required": [
                "message",
                "ok",
                "data"
              ],
              "type": "object"
            }
          }
        },
        "description": "Get region",
        "operationId": "GetRegion"
      },
      "post": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of regions",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/region"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Object with inserted region data",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Add one or more regions",
        "operationId": "CreateRegion"
      }
    },
    "/api/rendering": {
      "delete": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of namespaces and content ids (e.g. namespace=wacs, contentId=user-repo to use to delete renderings",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "contentIds": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "required": [
                "contentIds"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "confirmation message of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Delete one or more renderings",
        "operationId": "DeleteRendering"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "All renderings",
            "schema": {
              "properties": {
                "data": {
                  "items": {
                    "properties": {
                      "contentId": {
                        "type": "string"
                      },
                      "createdAt": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "fileSizeBytes": {
                        "type": "number",
                        "x-nullable": true
                      },
                      "fileType": {
                        "type": "string"
                      },
                      "hash": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "id": {
                        "type": "number"
                      },
                      "modifiedOn": {
                        "type": "string",
                        "x-nullable": true
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "contentId",
                      "fileType",
                      "fileSizeBytes",
                      "url",
                      "hash",
                      "createdAt",
                      "modifiedOn"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "type": "string"
                },
                "ok": {
                  "type": "boolean"
                }
              },
              "required": [
                "message",
                "ok",
                "data"
              ],
              "type": "object"
            }
          }
        },
        "description": "Get renderings",
        "operationId": "GetRendering"
      },
      "post": {
        "consumes": [
          "applications/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "A list of renders/links to add",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/rendering"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Confirmation of successful operation",
            "schema": {
              "$ref": "#/definitions/okRes"
            }
          },
          "400": {
            "description": "Error with details of improper request",
            "schema": {
              "$ref": "#/definitions/apiError"
            }
          }
        },
        "description": "Add one or more renders/links of content",
        "operationId": "CreateRendering"
      }
    }
  },
  "definitions": {
    "apiError": {
      "properties": {
        "addlErrs": {
          "items": {
            "properties": {
              "message": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "message",
              "name"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "err": {
          "properties": {
            "didErr": {
              "type": "boolean"
            },
            "issues": {
              "items": {
                "x-nullable": true
              },
              "type": "array"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "err",
        "addlErrs"
      ],
      "type": "object"
    },
    "content": {
      "example": [
        {
          "createdOn": "2024-10-07T04:09:42.428Z",
          "domain": "peripheral",
          "gitEntry": {
            "namespace": "wacs",
            "repoName": "picnic",
            "repoUrl": "https://impossible-attic.biz/",
            "username": "Freida_Medhurst16"
          },
          "languageId": "tsz",
          "level": "medium",
          "meta": {
            "showOnBiel": true,
            "status": "approved"
          },
          "modifiedOn": "2025-05-01T16:09:39.532Z",
          "name": "reg",
          "namespace": "wacs",
          "resourceType": "ulb",
          "type": "video"
        }
      ],
      "items": {
        "properties": {
          "createdOn": {
            "type": "string",
            "x-nullable": true
          },
          "domain": {
            "enum": [
              "scripture",
              "gloss",
              "parascriptural",
              "peripheral"
            ],
            "type": "string",
            "x-nullable": true
          },
          "gitEntry": {
            "properties": {
              "id": {
                "type": "number"
              },
              "repoName": {
                "type": "string"
              },
              "repoUrl": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "required": [
              "username",
              "repoName",
              "repoUrl"
            ],
            "type": "object"
          },
          "id": {
            "type": "string"
          },
          "languageId": {
            "type": "string",
            "x-nullable": true
          },
          "level": {
            "type": "string",
            "x-nullable": true
          },
          "meta": {
            "properties": {
              "id": {
                "type": "number"
              },
              "showOnBiel": {
                "type": "boolean"
              },
              "status": {
                "type": "string"
              }
            },
            "required": [
              "showOnBiel",
              "status"
            ],
            "type": "object"
          },
          "modifiedOn": {
            "type": "string",
            "x-nullable": true
          },
          "name": {
            "maxLength": 256,
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "resourceType": {
            "type": "string",
            "x-nullable": true
          },
          "title": {
            "type": "string",
            "x-nullable": true
          },
          "type": {
            "enum": [
              "text",
              "audio",
              "video",
              "braille"
            ],
            "type": "string"
          }
        },
        "required": [
          "name",
          "namespace",
          "type"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "country": {
      "example": [
        {
          "alpha2": "VU",
          "alpha3": "ROU",
          "createdOn": "2024-12-21T22:05:14.720Z",
          "modifiedOn": "2025-06-10T01:08:50.870Z",
          "name": "Niue",
          "population": 1216881995,
          "regionName": "North America"
        }
      ],
      "items": {
        "properties": {
          "alpha2": {
            "type": "string"
          },
          "alpha3": {
            "type": "string",
            "x-nullable": true
          },
          "createdOn": {
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "type": "number"
          },
          "modifiedOn": {
            "type": "string",
            "x-nullable": true
          },
          "name": {
            "type": "string"
          },
          "population": {
            "type": "number",
            "x-nullable": true
          },
          "regionName": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "alpha2",
          "regionName"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "git": {
      "example": [
        {
          "contentId": "wacs-user-repo",
          "repoName": "regal",
          "repoUrl": "https://bubbly-manifestation.com",
          "username": "Reyes53"
        }
      ],
      "items": {
        "properties": {
          "contentId": {
            "type": "string"
          },
          "id": {
            "type": "number"
          },
          "repoName": {
            "type": "string"
          },
          "repoUrl": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "required": [
          "contentId",
          "username",
          "repoName",
          "repoUrl"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "language": {
      "example": [
        {
          "allCountryAlpha2": [
            "TT"
          ],
          "alternateNames": [
            "unfurl",
            "across",
            "if",
            "judgementally"
          ],
          "createdOn": "2024-02-10T07:02:46.573Z",
          "direction": "ltr",
          "englishName": "likewise",
          "homeCountryAlpha2": "CA",
          "id": "EctYIfdhgj",
          "ietfCode": "urv",
          "isOralLanguage": false,
          "iso6393": "ptk",
          "nationalName": "atrophy",
          "waLangMeta": {
            "isGateway": false,
            "showOnBiel": true
          }
        }
      ],
      "items": {
        "properties": {
          "allCountryAlpha2": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "alternateNames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "createdOn": {
            "type": "string",
            "x-nullable": true
          },
          "direction": {
            "enum": [
              "ltr",
              "rtl"
            ],
            "type": "string"
          },
          "englishName": {
            "type": "string"
          },
          "gatewayIetf": {
            "type": "string"
          },
          "homeCountryAlpha2": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "ietfCode": {
            "type": "string"
          },
          "isOralLanguage": {
            "type": "boolean",
            "x-nullable": true
          },
          "iso6393": {
            "type": "string",
            "x-nullable": true
          },
          "modifiedOn": {
            "type": "string",
            "x-nullable": true
          },
          "nationalName": {
            "type": "string"
          },
          "waLangMeta": {
            "properties": {
              "isGateway": {
                "type": "boolean"
              },
              "showOnBiel": {
                "type": "boolean"
              }
            },
            "required": [
              "isGateway",
              "showOnBiel"
            ],
            "type": "object"
          }
        },
        "required": [
          "id",
          "ietfCode",
          "nationalName",
          "englishName",
          "direction",
          "homeCountryAlpha2"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "okRes": {
      "properties": {
        "message": {
          "type": "string"
        },
        "ok": {
          "default": true,
          "type": "boolean"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "region": {
      "example": [
        {
          "createdOn": "2023-08-26T02:59:57.240Z",
          "modifiedOn": "2023-08-26T15:08:47.336Z",
          "name": "Asia"
        }
      ],
      "items": {
        "properties": {
          "createdOn": {
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "type": "number"
          },
          "modifiedOn": {
            "type": "string",
            "x-nullable": true
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "type": "array"
    },
    "rendering": {
      "examples": [
        [
          {
            "contentId": "user-repo",
            "createdAt": "2024-08-22T21:38:20.816Z",
            "fileSizeBytes": 8329894733807616,
            "fileType": "mp4",
            "modifiedOn": "2024-05-08T23:48:59.212Z",
            "namespace": "wacs",
            "scripturalMeta": {
              "bookName": "1 Jean",
              "bookSlug": "1JN",
              "chapter": 5,
              "isWholeBook": false,
              "isWholeProject": true,
              "tempId": "jujbct8po8sd5jezhrdvuv3k"
            },
            "tempId": "jujbct8po8sd5jezhrdvuv3k",
            "url": "https://bitter-businessman.biz"
          }
        ],
        [
          {
            "contentId": "user-repo",
            "createdAt": "2024-02-25T03:29:08.432Z",
            "fileSizeBytes": 6008810963468288,
            "fileType": "html",
            "modifiedOn": "2024-06-02T14:44:23.981Z",
            "namespace": "wacs",
            "nonScripturalMeta": {
              "additionalData": "A json field",
              "name": "nonScripturalName",
              "tempId": "zo6ipj7qckv2a95k6zq9waj4"
            },
            "scripturalMeta": {
              "bookName": "1 Jean",
              "bookSlug": "1JN",
              "chapter": 3,
              "isWholeBook": true,
              "isWholeProject": false,
              "tempId": "zo6ipj7qckv2a95k6zq9waj4"
            },
            "tempId": "zo6ipj7qckv2a95k6zq9waj4",
            "url": "https://acceptable-figure.biz/"
          }
        ]
      ],
      "items": {
        "properties": {
          "contentId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "x-nullable": true
          },
          "fileSizeBytes": {
            "minimum": 0,
            "type": "number",
            "x-nullable": true
          },
          "fileType": {
            "type": "string"
          },
          "hash": {
            "type": "string",
            "x-nullable": true
          },
          "id": {
            "type": "number"
          },
          "modifiedOn": {
            "type": "string",
            "x-nullable": true
          },
          "namespace": {
            "type": "string"
          },
          "nonScripturalMeta": {
            "properties": {
              "additionalData": {
                "x-nullable": true
              },
              "id": {
                "type": "number"
              },
              "name": {
                "maxLength": 256,
                "type": "string",
                "x-nullable": true
              },
              "renderingId": {
                "type": "number"
              },
              "tempId": {
                "type": "string"
              }
            },
            "required": [
              "tempId"
            ],
            "type": "object"
          },
          "scripturalMeta": {
            "properties": {
              "bookName": {
                "type": "string",
                "x-nullable": true
              },
              "bookSlug": {
                "type": "string",
                "x-nullable": true
              },
              "chapter": {
                "type": "number",
                "x-nullable": true
              },
              "id": {
                "type": "number"
              },
              "isWholeBook": {
                "type": "boolean"
              },
              "isWholeProject": {
                "type": "boolean"
              },
              "renderingId": {
                "type": "number"
              },
              "sort": {
                "type": "number",
                "x-nullable": true
              },
              "tempId": {
                "type": "string"
              }
            },
            "required": [
              "isWholeBook",
              "isWholeProject",
              "tempId"
            ],
            "type": "object"
          },
          "tempId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "required": [
          "contentId",
          "fileType",
          "url",
          "tempId",
          "namespace"
        ],
        "type": "object"
      },
      "type": "array"
    }
  },
  "x-components": {
    "parameters": {}
  }
}